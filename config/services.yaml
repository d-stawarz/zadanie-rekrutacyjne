# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    geocodeEarthApiKey: '%env(GEOCODE_EARTH_API_KEY)%'
    redisDSN: 'redis://%env(REDIS_USER)%:%env(REDIS_PASSWORD)%@%env(REDIS_HOST)%:%env(REDIS_PORT)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $geocodeEarthApiKey: '%geocodeEarthApiKey%'
            $openWeatherApiKey: '%env(OPEN_WEATHER_API_KEY)%'
            $weatherBitApiKey: '%env(WEATHER_BIT_API_KEY)%'
            $redisDSN: '%redisDSN%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\FillWeatherRequestWithWeatherDataService:
        arguments:
            - [
                '@App\Service\Api\OpenWeatherMap\CurrentWeatherOpenWeatherProvider',
                '@App\Service\Api\WeatherBit\CurrentWeatherWeatherBitProvider'
            ]

